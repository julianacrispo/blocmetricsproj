
<script>
    var data = <%= @events.where(what: "click").count(group: "DATE(created_at)").to_json %>;
</script>


<div class="row">
  <div class="col-md-4">
    <h2> WHO </h2>
    <p> Users or Guests </p>
        <canvas id="myPie" width="300" height="325"></canvas>
        <script>
        // Get context with jQuery - using jQuery's .get() method.
        var ctx = $("#myPie").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var myNewPie = new Chart(ctx);

        var data = [
            {
                value: <%= @user_percentages[:guests] %>,
                color:"#F7464A",
                highlight: "#FF5A5E",
                label: "Guests"
            },
            {
                value: <%= @user_percentages[:users] %> ,
                color: "#46BFBD",
                highlight: "#5AD3D1",
                label: "Users"
            }
        ]

        myNewPie.Doughnut(data, {
            bezierCurve: true
        });
    </script>
  </div>
  <div class="col-md-4">
    <h2> WHAT </h2>
    <p> Something to explain what </p>
    <canvas id="myClicks" width="300" height="400"></canvas>
      <script>
      // Get context with jQuery - using jQuery's .get() method.
      var ctx = $("#myClicks").get(0).getContext("2d");
      // This will get the first returned node in the jQuery collection.
      var myNewClicks = new Chart(ctx);

      var data = {
    
          datasets: [
              {
                  label: "Clicks",
                  fillColor: "rgba(220,220,220,0.2)",
                  strokeColor: "rgba(220,220,220,1)",
                  pointColor: "rgba(220,220,220,1)",
                  pointStrokeColor: "#fff",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  data: <%= @events.where(what: "loaded page").count(group: "DATE(created_at)").to_json %>
              },
              {
                  label: "Views",
                  fillColor: "rgba(151,187,205,0.2)",
                  strokeColor: "rgba(151,187,205,1)",
                  pointColor: "rgba(151,187,205,1)",
                  pointStrokeColor: "#fff",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(151,187,205,1)",
                  data: <%= @events.where(what: "loaded page").count(group: "DATE(created_at)").to_json %>
          ]
      };

      myNewClicks.Line(data, {
          bezierCurve: true
      });
      </script>
  </div>
  <div class="col-md-4">
    <h2> WHERE </h2>
    <p> Something to explain where </p>
    <canvas id="myWhere" width="300" height="400"></canvas>
      <script>
        // Get context with jQuery - using jQuery's .get() method.
        var ctx = $("#myWhere").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var myNewWhere = new Chart(ctx);

        var data = {
            labels: ,
            datasets: [
                {
                    label: "Clicks",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
                {
                    label: "Views",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: [28, 48, 40, 19, 86, 27, 90]
                }
            ]
        };

        myNewWhere.Bar(data, {
            bezierCurve: true
        });
      </script>
  </div>
</div>

<!-- row 2 -->



<!-- row 3 of chart fun! -->

<div class="row">
  <div class="col-md-4">
    <h2> ORIGIN</h2>
    <p> Something to explain origin </p>
        <canvas id="myRadar" width="300" height="325"></canvas>
        <script>
        // Get context with jQuery - using jQuery's .get() method.
        var ctx = $("#myRadar").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var myNewRadar = new Chart(ctx);

        var data = {
    labels: ["Home", "Signup", "Sign In", "Log Out", "About", "Topics", "Popular"],
    datasets: [
        {
            label: "My First dataset",
            fillColor: "rgba(220,220,220,0.2)",
            strokeColor: "rgba(220,220,220,1)",
            pointColor: "rgba(220,220,220,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: [65, 59, 90, 81, 56, 55, 40]
        },
        {
            label: "My Second dataset",
            fillColor: "rgba(151,187,205,0.2)",
            strokeColor: "rgba(151,187,205,1)",
            pointColor: "rgba(151,187,205,1)",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(151,187,205,1)",
            data: [28, 48, 40, 19, 96, 27, 100]
        }
    ]
};

        myNewRadar.Radar(data, {
            bezierCurve: true
        });
    </script>
  </div>
  <div class="col-md-4">
    <h2> PATHS </h2>
    <p> Something to explain what </p>
    <canvas id="myClicks" width="300" height="400"></canvas>
      <script>
      // Get context with jQuery - using jQuery's .get() method.
      var ctx = $("#myClicks").get(0).getContext("2d");
      // This will get the first returned node in the jQuery collection.
      var myNewClicks = new Chart(ctx);

      var data = {
          labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
          datasets: [
              {
                  label: "Clicks",
                  fillColor: "rgba(220,220,220,0.2)",
                  strokeColor: "rgba(220,220,220,1)",
                  pointColor: "rgba(220,220,220,1)",
                  pointStrokeColor: "#fff",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  data: [65, 59, 80, 81, 56, 55, 40]
              },
              {
                  label: "Views",
                  fillColor: "rgba(151,187,205,0.2)",
                  strokeColor: "rgba(151,187,205,1)",
                  pointColor: "rgba(151,187,205,1)",
                  pointStrokeColor: "#fff",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(151,187,205,1)",
                  data: [28, 48, 40, 19, 86, 27, 90]
              }
          ]
      };

      myNewClicks.Line(data, {
          bezierCurve: true
      });
      </script>
  </div>
  <div class="col-md-4">
    <h2> WHERE </h2>
    <p> Something to explain where </p>
    <canvas id="myWhere" width="300" height="400"></canvas>
      <script>
        // Get context with jQuery - using jQuery's .get() method.
        var ctx = $("#myWhere").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var myNewWhere = new Chart(ctx);

        var data = {
            labels: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            datasets: [
                {
                    label: "Clicks",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
                {
                    label: "Views",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: [28, 48, 40, 19, 86, 27, 90]
                }
            ]
        };

        var event_data = <%= @events.to_json.html_safe %>;


        myNewWhere.Bar(data, {
            bezierCurve: true
        });
      </script>
  </div>
</div>


<!-- testing -->
<br>
  <div class ="container-modal">
    <!-- Button trigger modal -->
    <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
      Track New Event
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
            <h4 class="modal-title" id="myModalLabel">Create New Event</h4>
          </div>
          <div class="modal-body">
            <%= render 'form' %>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary">Save changes</button>
          </div>
        </div>
      </div>
    </div>
  </div>

<!-- test end -->




<h1>Listing events</h1>

<table>
  <thead>
    <tr>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @events.each do |event| %>
      <tr>
        <td><%= link_to event.where, event %></td>
        <td><%= link_to 'Show', event %></td>
        <td><%= link_to 'Edit', edit_event_path(event) %></td>
        <td><%= link_to 'Destroy', event, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

  <h4> Total App Views </h4>
  <%= @events.where(what: "loaded page").count(group: "DATE(created_at)").to_json %>

 <h4> HOME Views(/ path) </h4>  
 <%= @events.where(where: "/").count.to_json %>

  <h4> SIGN INS </h4>  
 <%= @events.where(where: "/users/sign_in").count.to_json %>




<script>
  var data = <%= @events.where(what: "click").count(group: "DATE(created_at)").to_json %>;
</script>





<h4> total events </h4>
<%= Event.count(:order => 'DATE(created_at) DESC', :group => ["DATE(created_at)"]) %>

<h4> by date </h4>
<%= @events.group_by{ |event| event.created_at.to_date } %>

<h4> total events </h4>
<%= @events.group_by(&:group_by_criteria).map %>